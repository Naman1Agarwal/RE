import z3

FINAL_BYTES = [
0x46, 0x4a, 0xd, 0x19, 0x43, 0x13, 0x4a, 0x4a, 0x0, 0x54, 0x2, 0xe
]

def recover_string_with_z3(ciphertext):
    s = z3.Solver()
    length = len(ciphertext)
    x_chars = [z3.BitVec(f'x_{i}', 8) for i in range(length)]

    for i, c in enumerate(ciphertext):
        s.add(x_chars[i] ^ ord(c) == FINAL_BYTES[i])
    
    if s.check() == z3.sat:
        model = s.model()
        plaintext_chars = [chr(model[x_chars[i]].as_long()) for i in range(length)]
        return "".join(plaintext_chars)
    else:
        return None

if __name__ == "__main__":
    ciphertext = "28xj73$% ;lk"
    plaintext = recover_string_with_z3(ciphertext)
    if plaintext is not None:
        print("Recovered plaintext:", plaintext)
    else:
        print("No solution found.")
